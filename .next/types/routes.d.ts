// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/auth/login" | "/dashboard" | "/dashboard/debug" | "/dashboard/profile" | "/dashboard/settings" | "/payment/cancel" | "/payment/success"
type AppRouteHandlerRoutes = "/api/analytics" | "/api/audit" | "/api/auth/[...nextauth]" | "/api/debug/check-tables" | "/api/debug/db-test" | "/api/defaulters" | "/api/executive-dashboard" | "/api/export-report" | "/api/financial-analytics" | "/api/forecasting" | "/api/history" | "/api/history-complete" | "/api/history/[id]" | "/api/last-processing" | "/api/mappings" | "/api/mappings/[id]" | "/api/mappings/[id]/default" | "/api/migrate-form-mappings" | "/api/observations" | "/api/optimization" | "/api/payment" | "/api/payment/public" | "/api/preview-excel" | "/api/process-period" | "/api/process-report" | "/api/production" | "/api/production-insights" | "/api/production-metrics" | "/api/save-report" | "/api/signup" | "/api/test-db" | "/api/user/activity" | "/api/user/password" | "/api/user/profile" | "/api/user/settings" | "/api/user/stats" | "/api/verify-database"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/analytics": {}
  "/api/audit": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/debug/check-tables": {}
  "/api/debug/db-test": {}
  "/api/defaulters": {}
  "/api/executive-dashboard": {}
  "/api/export-report": {}
  "/api/financial-analytics": {}
  "/api/forecasting": {}
  "/api/history": {}
  "/api/history-complete": {}
  "/api/history/[id]": { "id": string; }
  "/api/last-processing": {}
  "/api/mappings": {}
  "/api/mappings/[id]": { "id": string; }
  "/api/mappings/[id]/default": { "id": string; }
  "/api/migrate-form-mappings": {}
  "/api/observations": {}
  "/api/optimization": {}
  "/api/payment": {}
  "/api/payment/public": {}
  "/api/preview-excel": {}
  "/api/process-period": {}
  "/api/process-report": {}
  "/api/production": {}
  "/api/production-insights": {}
  "/api/production-metrics": {}
  "/api/save-report": {}
  "/api/signup": {}
  "/api/test-db": {}
  "/api/user/activity": {}
  "/api/user/password": {}
  "/api/user/profile": {}
  "/api/user/settings": {}
  "/api/user/stats": {}
  "/api/verify-database": {}
  "/auth/login": {}
  "/dashboard": {}
  "/dashboard/debug": {}
  "/dashboard/profile": {}
  "/dashboard/settings": {}
  "/payment/cancel": {}
  "/payment/success": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
