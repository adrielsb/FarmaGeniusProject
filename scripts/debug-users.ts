#!/usr/bin/env npx tsx

import 'dotenv/config'
import { supabaseAdmin } from '../lib/supabase'
import { compare } from 'bcryptjs'

async function debugUsers() {
  console.log('üîç Debug de Usu√°rios e Autentica√ß√£o\n')

  if (!supabaseAdmin) {
    console.log('‚ùå Supabase admin client n√£o dispon√≠vel')
    return
  }

  // Buscar todos os usu√°rios
  console.log('üìä Usu√°rios no banco de dados:')
  const { data: users, error } = await supabaseAdmin
    .from('users')
    .select('id, name, email, password, created_at')
    .order('created_at', { ascending: false })

  if (error) {
    console.error('‚ùå Erro ao buscar usu√°rios:', error)
    return
  }

  if (!users || users.length === 0) {
    console.log('   Nenhum usu√°rio encontrado')
    return
  }

  users.forEach((user, index) => {
    console.log(`${index + 1}. ${user.name} (${user.email})`)
    console.log(`   ID: ${user.id}`)
    console.log(`   Password hash: ${user.password ? user.password.substring(0, 30) + '...' : 'SEM SENHA'}`)
    console.log(`   Criado: ${user.created_at}`)
    console.log('')
  })

  // Testar hash da senha para usu√°rios espec√≠ficos
  console.log('üîê Testando valida√ß√£o de senhas:')
  
  for (const user of users) {
    if (user.email === 'final@exemplo.com') {
      console.log(`\nTestando senha para ${user.email}:`)
      if (!user.password) {
        console.log('   ‚ùå Usu√°rio n√£o tem senha definida')
        continue
      }

      try {
        const isValid = await compare('senha456', user.password)
        console.log(`   Senha 'senha456': ${isValid ? '‚úÖ V√°lida' : '‚ùå Inv√°lida'}`)
        
        // Testar senha simples
        const isValidSimple = await compare('123456', user.password)
        console.log(`   Senha '123456': ${isValidSimple ? '‚úÖ V√°lida' : '‚ùå Inv√°lida'}`)
      } catch (error) {
        console.log(`   ‚ùå Erro ao comparar senha: ${error}`)
      }
    }

    if (user.email === 'novo@exemplo.com') {
      console.log(`\nTestando senha para ${user.email}:`)
      if (!user.password) {
        console.log('   ‚ùå Usu√°rio n√£o tem senha definida')
        continue
      }

      try {
        const isValid = await compare('senha123', user.password)
        console.log(`   Senha 'senha123': ${isValid ? '‚úÖ V√°lida' : '‚ùå Inv√°lida'}`)
      } catch (error) {
        console.log(`   ‚ùå Erro ao comparar senha: ${error}`)
      }
    }
  }

  console.log('\n‚ú® Debug conclu√≠do!')
}

// Executar o script
if (require.main === module) {
  debugUsers().catch(console.error)
}